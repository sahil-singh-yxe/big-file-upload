{"ast":null,"code":"import Signature from \"./Signature\";\nimport Policy from \"./Policy\";\nimport { dateISOString, xAmzDate, dateYMD } from \"./Date\";\nimport { throwError } from './ErrorThrower';\nclass S3FileUpload {\n  static async uploadFile(file, config) {\n    // Error Thrower :x:\n    throwError(config, file);\n    const fd = new FormData();\n    const key = `${config.dirName ? config.dirName + \"/\" : \"\"}${file.name}`;\n    const url = `https://${config.bucketName}.s3.amazonaws.com/`;\n    fd.append(\"key\", key);\n    fd.append(\"acl\", \"public-read\");\n    fd.append(\"Content-Type\", file.type);\n    fd.append(\"x-amz-meta-uuid\", \"14365123651274\");\n    fd.append(\"x-amz-server-side-encryption\", \"AES256\");\n    fd.append(\"X-Amz-Credential\", `${config.accessKeyId}/${dateYMD}/${config.region}/s3/aws4_request`);\n    fd.append(\"X-Amz-Algorithm\", \"AWS4-HMAC-SHA256\");\n    fd.append(\"X-Amz-Date\", xAmzDate);\n    fd.append(\"x-amz-meta-tag\", \"\");\n    fd.append(\"Policy\", Policy.getPolicy(config));\n    fd.append(\"X-Amz-Signature\", Signature.getSignature(config, dateYMD, Policy.getPolicy(config)));\n    fd.append(\"file\", file);\n    const params = {\n      method: \"post\",\n      headers: {\n        fd\n      },\n      body: fd\n    };\n    const data = await fetch(url, params);\n    if (!data.ok) return Promise.reject(data);\n    return Promise.resolve({\n      bucket: config.bucketName,\n      key: `${config.dirName ? config.dirName + \"/\" : \"\"}${file.name}`,\n      location: `${url}${config.dirName ? config.dirName + \"/\" : \"\"}${file.name}`,\n      result: data\n    });\n  }\n  static async deleteFile(fileName, config) {\n    const fd = new FormData();\n    const url = `https://${config.bucketName}.s3-${config.region}.amazonaws.com/${config.dirName ? config.dirName + \"/\" : \"\"}${fileName}`;\n    fd.append(\"Date\", xAmzDate);\n    fd.append(\"X-Amz-Date\", xAmzDate);\n    fd.append(\"Authorization\", Signature.getSignature(config, dateYMD, Policy.getPolicy(config)));\n    fd.append(\"Content-Type\", \"text/plain\");\n    const params = {\n      method: \"delete\",\n      headers: {\n        fd\n      }\n    };\n    const deleteResult = await fetch(url, params);\n    if (!deleteResult.ok) return Promise.reject(deleteResult);\n    return Promise.resolve({\n      ok: deleteResult.ok,\n      status: deleteResult.status,\n      message: \"File Deleted\",\n      fileName: fileName\n    });\n  }\n}\nconst {\n  uploadFile,\n  deleteFile\n} = S3FileUpload;\nexport { uploadFile, deleteFile };\nexport default S3FileUpload;","map":{"version":3,"names":["Signature","Policy","dateISOString","xAmzDate","dateYMD","throwError","S3FileUpload","uploadFile","file","config","fd","FormData","key","dirName","name","url","bucketName","append","type","accessKeyId","region","getPolicy","getSignature","params","method","headers","body","data","fetch","ok","Promise","reject","resolve","bucket","location","result","deleteFile","fileName","deleteResult","status","message"],"sources":["/Users/sahilsingh/Desktop/projects/proj-s3/node_modules/react-s3/lib/ReactS3.js"],"sourcesContent":["import Signature from \"./Signature\";\nimport Policy from \"./Policy\";\nimport { dateISOString, xAmzDate, dateYMD } from \"./Date\";\nimport { throwError } from './ErrorThrower';\n\nclass S3FileUpload {\n    static async uploadFile(file, config) {\n\n        // Error Thrower :x:\n        throwError(config, file);\n\n        const fd = new FormData();\n        const key = `${config.dirName ? config.dirName + \"/\" : \"\"}${file.name}`;\n        const url = `https://${config.bucketName}.s3.amazonaws.com/`;\n        fd.append(\"key\", key);\n        fd.append(\"acl\", \"public-read\");\n        fd.append(\"Content-Type\", file.type);\n        fd.append(\"x-amz-meta-uuid\", \"14365123651274\");\n        fd.append(\"x-amz-server-side-encryption\", \"AES256\");\n        fd.append(\"X-Amz-Credential\", `${config.accessKeyId}/${dateYMD}/${config.region}/s3/aws4_request`);\n        fd.append(\"X-Amz-Algorithm\", \"AWS4-HMAC-SHA256\");\n        fd.append(\"X-Amz-Date\", xAmzDate);\n        fd.append(\"x-amz-meta-tag\", \"\");\n        fd.append(\"Policy\", Policy.getPolicy(config));\n        fd.append(\"X-Amz-Signature\", Signature.getSignature(config, dateYMD, Policy.getPolicy(config)));\n        fd.append(\"file\", file);\n\n        const params = {\n            method: \"post\",\n            headers: {\n                fd\n            },\n            body: fd\n        };\n\n        const data = await fetch(url, params);\n        if (!data.ok) return Promise.reject(data);\n        return Promise.resolve({\n            bucket: config.bucketName,\n            key: `${config.dirName ? config.dirName + \"/\" : \"\"}${file.name}`,\n            location: `${url}${config.dirName ? config.dirName + \"/\" : \"\"}${file.name}`,\n            result: data\n        });\n    }\n    static async deleteFile(fileName, config) {\n        const fd = new FormData();\n        const url = `https://${config.bucketName}.s3-${config.region}.amazonaws.com/${config.dirName ? config.dirName + \"/\" : \"\"}${fileName}`;\n        fd.append(\"Date\", xAmzDate);\n        fd.append(\"X-Amz-Date\", xAmzDate);\n        fd.append(\"Authorization\", Signature.getSignature(config, dateYMD, Policy.getPolicy(config)));\n        fd.append(\"Content-Type\", \"text/plain\");\n\n        const params = {\n            method: \"delete\",\n            headers: {\n                fd\n            }\n        };\n\n        const deleteResult = await fetch(url, params);\n        if (!deleteResult.ok) return Promise.reject(deleteResult);\n        return Promise.resolve({\n            ok: deleteResult.ok,\n            status: deleteResult.status,\n            message: \"File Deleted\",\n            fileName: fileName\n        });\n    }\n}\nconst { uploadFile, deleteFile } = S3FileUpload;\nexport { uploadFile, deleteFile };\nexport default S3FileUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}