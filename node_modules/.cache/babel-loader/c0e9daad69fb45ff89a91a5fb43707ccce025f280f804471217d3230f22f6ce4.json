{"ast":null,"code":"var _jsxFileName = \"/Users/sahilsingh/Desktop/projects/proj-s3/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport ReactS3 from 'react-s3';\nimport AWS from 'aws-sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET = 'test306603';\nconst REGION = 'us-east-1';\nAWS.config.update({\n  accessKeyId: 'AKIA5JIEG6VWZTGLWFNO',\n  secretAccessKey: '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'\n});\nconst myBucket = new AWS.S3({\n  params: {\n    Bucket: S3_BUCKET\n  },\n  region: REGION\n});\nconst config = {\n  bucketName: 'test306603',\n  // dirName: 'photos', /* optional */\n  region: 'us-east-1',\n  accessKeyId: 'AKIA5JIEG6VWZTGLWFNO',\n  secretAccessKey: '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'\n};\nfunction App() {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileInput = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const uploadFile = file => {\n    const params = {\n      ACL: 'public-read',\n      Body: file,\n      Bucket: S3_BUCKET,\n      Key: file.name\n    };\n    myBucket.putObject(params).on('httpUploadProgress', evt => {\n      setProgress(Math.round(evt.loaded / evt.total * 100));\n    }).send(err => {\n      if (err) console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Native SDK File Upload Progress is \", progress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => uploadFile(selectedFile),\n      children: \" Upload to S3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qPDTDSeNXJmp5DBGdZa8cfltESQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","ReactS3","AWS","jsxDEV","_jsxDEV","S3_BUCKET","REGION","config","update","accessKeyId","secretAccessKey","myBucket","S3","params","Bucket","region","bucketName","App","_s","progress","setProgress","useState","selectedFile","setSelectedFile","handleFileInput","e","target","files","uploadFile","file","ACL","Body","Key","name","putObject","on","evt","Math","round","loaded","total","send","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/sahilsingh/Desktop/projects/proj-s3/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport ReactS3 from 'react-s3';\n\nimport AWS from 'aws-sdk'\n\nconst S3_BUCKET ='test306603';\nconst REGION ='us-east-1';\n\n\nAWS.config.update({\n    accessKeyId: 'AKIA5JIEG6VWZTGLWFNO',\n    secretAccessKey: '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'\n})\n\nconst myBucket = new AWS.S3({\n    params: { Bucket: S3_BUCKET},\n    region: REGION,\n})\n\n \nconst config = {\n    bucketName: 'test306603',\n    // dirName: 'photos', /* optional */\n    region: 'us-east-1',\n    accessKeyId: 'AKIA5JIEG6VWZTGLWFNO',\n    secretAccessKey: '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',\n}\n\nfunction App() {\n\n\n\n  const [progress , setProgress] = useState(0);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileInput = (e) => {\n      setSelectedFile(e.target.files[0]);\n  }\n\n  const uploadFile = (file) => {\n\n      const params = {\n          ACL: 'public-read',\n          Body: file,\n          Bucket: S3_BUCKET,\n          Key: file.name\n      };\n\n      myBucket.putObject(params)\n          .on('httpUploadProgress', (evt) => {\n              setProgress(Math.round((evt.loaded / evt.total) * 100))\n          })\n          .send((err) => {\n              if (err) console.log(err)\n          })\n  }\n\n  return (\n    <div className=\"App\">\n     <div>Native SDK File Upload Progress is {progress}%</div>\n        <input type=\"file\" onChange={handleFileInput}/>\n        <button onClick={() => uploadFile(selectedFile)}> Upload to S3</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAElB,OAAOC,OAAO,MAAM,UAAU;AAE9B,OAAOC,GAAG,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAE,YAAY;AAC7B,MAAMC,MAAM,GAAE,WAAW;AAGzBJ,GAAG,CAACK,MAAM,CAACC,MAAM,CAAC;EACdC,WAAW,EAAE,sBAAsB;EACnCC,eAAe,EAAE;AACrB,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAG,IAAIT,GAAG,CAACU,EAAE,CAAC;EACxBC,MAAM,EAAE;IAAEC,MAAM,EAAET;EAAS,CAAC;EAC5BU,MAAM,EAAET;AACZ,CAAC,CAAC;AAGF,MAAMC,MAAM,GAAG;EACXS,UAAU,EAAE,YAAY;EACxB;EACAD,MAAM,EAAE,WAAW;EACnBN,WAAW,EAAE,sBAAsB;EACnCC,eAAe,EAAE;AACrB,CAAC;AAED,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAIb,MAAM,CAACC,QAAQ,EAAGC,WAAW,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMG,eAAe,GAAIC,CAAC,IAAK;IAC3BF,eAAe,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAEzB,MAAMhB,MAAM,GAAG;MACXiB,GAAG,EAAE,aAAa;MAClBC,IAAI,EAAEF,IAAI;MACVf,MAAM,EAAET,SAAS;MACjB2B,GAAG,EAAEH,IAAI,CAACI;IACd,CAAC;IAEDtB,QAAQ,CAACuB,SAAS,CAACrB,MAAM,CAAC,CACrBsB,EAAE,CAAC,oBAAoB,EAAGC,GAAG,IAAK;MAC/BhB,WAAW,CAACiB,IAAI,CAACC,KAAK,CAAEF,GAAG,CAACG,MAAM,GAAGH,GAAG,CAACI,KAAK,GAAI,GAAG,CAAC,CAAC;IAC3D,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAK;MACX,IAAIA,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAC7B,CAAC,CAAC;EACV,CAAC;EAED,oBACEtC,OAAA;IAAKyC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACnB1C,OAAA;MAAA0C,QAAA,GAAK,qCAAmC,EAAC3B,QAAQ,EAAC,GAAC;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACtD9C,OAAA;MAAO+C,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAE5B;IAAgB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC/C9C,OAAA;MAAQiD,OAAO,EAAEA,CAAA,KAAMzB,UAAU,CAACN,YAAY,CAAE;MAAAwB,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrE;AAEV;AAAChC,EAAA,CApCQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}